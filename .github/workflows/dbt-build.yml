name: dbt state-aware deploy with S3

on:
  push:
    branches: [main]

  schedule:
    - cron: '0 4 * * *'  # Daily at 04:00 UTC

  workflow_dispatch:
    inputs:
      triggerBuild:
        description: 'Manually trigger a dbt run'
        required: false
        type: boolean

jobs:
  dbt-deploy:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/dbt-labs/dbt-athena:1.9.3

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dbt
        run: pip install dbt-athena-community

      - name: Write dbt profile
        run: |
          mkdir -p ~/.dbt
          echo "${{ secrets.DBT_PROFILES_YML }}" > ~/.dbt/profiles.yml

      - name: Download previous manifest from S3
        run: |
          mkdir -p .dbt-state
          aws s3 cp s3://igor-athena-bucket-20250412/deploy-dbt/manifest.json .dbt-state/manifest.json || echo "No previous manifest"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Run dbt build (state-aware)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          dbt deps
          dbt compile
          if [ -f .dbt-state/manifest.json ]; then
            echo "Running state-aware build"
            dbt build --select state:modified+ --defer --state .dbt-state/
          else
            echo "No manifest found â€” running full build"
            dbt build
          fi
          dbt docs generate

      - name: Upload new manifest to S3
        run: |
          aws s3 cp target/manifest.json s3://igor-athena-bucket-20250412/deploy-dbt/manifest.json
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Deploy dbt docs to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target
          publish_branch: gh-pages